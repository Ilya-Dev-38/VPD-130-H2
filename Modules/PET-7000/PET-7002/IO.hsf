BEGIN_FUNCTION_BLOCK();

// PET-7002, DIx6, DOx3, AIx3

char  v_di = 0;
char  v_do = 0;
WORD  v_ai[3];
int   val[3];
int   gWriteCount = 0;

// Write DO
if (VAR_VALUE($ENABLE_DO) && VAR_VALUE($W_ACTION)) 
{
   int iWrite = 0;
   v_do   = 0;
    
   iWrite += VAR_GET_WRITE_BYTE(&v_do, $DO0, 0);
   iWrite += VAR_GET_WRITE_BYTE(&v_do, $DO1, 1);
   iWrite += VAR_GET_WRITE_BYTE(&v_do, $DO2, 2);
   
   if ( iWrite )  // Write only when need
   {
      gWriteCount++;
      if ( ! MTM_WRITEDO($DEVICE, $NETID, 0, 3, &v_do, $TIMEOUT) )
          return HMI_ERROR;
   }  
}

if ( gWriteCount ) return HMI_OK;  // Skip reading to reduce the device loading 

// Readback DO ***************
if (VAR_VALUE($ENABLE_DO) && VAR_VALUE($R_ACTION)) { 
   if (MTM_READDO($DEVICE, $NETID, 0, 3, &v_do, $TIMEOUT) ) 
   {
      VAR_SET($DO0, (v_do>>0) & 1);
	   VAR_SET($DO1, (v_do>>1) & 1);
	   VAR_SET($DO2, (v_do>>2) & 1);
   } else
      return HMI_ERROR;
}

// Read DI ********************
if (VAR_VALUE($ENABLE_DI) && VAR_VALUE($R_ACTION)) { 
   if (MTM_READDI($DEVICE, $NETID, 0, 6, &v_di, $TIMEOUT)) 
   {  
      VAR_SET($DI0, (v_di>>0) & 1);
      VAR_SET($DI1, (v_di>>1) & 1);
      VAR_SET($DI2, (v_di>>2) & 1);
      VAR_SET($DI3, (v_di>>3) & 1);
      VAR_SET($DI4, (v_di>>4) & 1);
      VAR_SET($DI5, (v_di>>5) & 1);
   } else
      return HMI_ERROR;
}

// Read AI ********************
if (VAR_VALUE($ENABLE_AI) && VAR_VALUE($R_ACTION)) { 
   if (MTM_READAI($DEVICE, $NETID, 0, 3, v_ai, $TIMEOUT) ) 
   {

      // The M7K_AIHexToLongK() returns value * 1000
      //for (int i=0; i<3; i++)
      //   val[i] = M7K_AIHexToLongK("7002", VAR_VALUE($TYPECODE_AI), v_ai[i]); 
   
      VAR_SET($AI0, val[0]);
      VAR_SET($AI1, val[1]);
      VAR_SET($AI2, val[2]);
   } else
      return HMI_ERROR;
}

END_FUNCTION_BLOCK();
