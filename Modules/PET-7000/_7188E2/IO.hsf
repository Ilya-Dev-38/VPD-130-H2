BEGIN_FUNCTION_BLOCK();

DWORD v_do = 0;
DWORD v_di = 0;
int   gWriteCount = 0;

if ( VAR_VALUE($ENABLE_DO) && VAR_VALUE($W_ACTION)) 
{
   int iWrite = 0;
   v_do   = 0;
    
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO0, 0);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO1, 1);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO2, 2);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO3, 3);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO4, 4);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO5, 5);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO6, 6);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO7, 7);
    
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO8, 8);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO9, 9);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO10, 10);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO11, 11);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO12, 12);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO13, 13);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO14, 14);
   iWrite += VAR_GET_WRITE_U32(&v_do, $DO15, 15);
   
   if ( iWrite )  // Write only when need
   {
      gWriteCount++;
      if (! MBM_WRITEDO($DEVICE, 0, 16, v_do) )
          return HMI_ERROR;

      //SysCtlDelay(100000);
   }   
}

if ( gWriteCount ) return HMI_OK;  // Skip reading to reduce the device loading 

if ( VAR_VALUE($ENABLE_DO) && VAR_VALUE($R_ACTION) ) 
{ 
   v_do = 0;
   if (MBM_READDO($DEVICE, 0, 16, &v_do) ) {

      //SysCtlDelay(100000);
    
      VAR_SET($DO0, v_do & (1<<0));
      VAR_SET($DO1, v_do & (1<<1));
	  VAR_SET($DO2, v_do & (1<<2));
	  VAR_SET($DO3, v_do & (1<<3));
	  VAR_SET($DO4, v_do & (1<<4));
	  VAR_SET($DO5, v_do & (1<<5));
	  VAR_SET($DO6, v_do & (1<<6));
	  VAR_SET($DO7, v_do & (1<<7));
	  VAR_SET($DO8, v_do & (1<<8));
	  VAR_SET($DO9, v_do & (1<<9));
	  VAR_SET($DO10, v_do & (1<<10));
	  VAR_SET($DO11, v_do & (1<<11));
	  VAR_SET($DO12, v_do & (1<<12));
	  VAR_SET($DO13, v_do & (1<<13));
	  VAR_SET($DO14, v_do & (1<<14));
	  VAR_SET($DO15, v_do & (1<<15));
   } else
      return HMI_ERROR;  
}

if ( VAR_VALUE($ENABLE_DI) && VAR_VALUE($R_ACTION) )
{ 
   v_di = 0;
   if (MBM_READDI($DEVICE, 16, 16, &v_di) ) {

      //SysCtlDelay(100000);
    
	  VAR_SET($DI0, v_di & (1<<0));
	  VAR_SET($DI1, v_di & (1<<1));
	  VAR_SET($DI2, v_di & (1<<2));
	  VAR_SET($DI3, v_di & (1<<3));
	  VAR_SET($DI4, v_di & (1<<4));
	  VAR_SET($DI5, v_di & (1<<5));
	  VAR_SET($DI6, v_di & (1<<6));
	  VAR_SET($DI7, v_di & (1<<7));
	  VAR_SET($DI8, v_di & (1<<8));
	  VAR_SET($DI9, v_di & (1<<9));
	  VAR_SET($DI10, v_di & (1<<10));
	  VAR_SET($DI11, v_di & (1<<11));
	  VAR_SET($DI12, v_di & (1<<12));
	  VAR_SET($DI13, v_di & (1<<13));
	  VAR_SET($DI14, v_di & (1<<14));
	  VAR_SET($DI15, v_di & (1<<15));
   } else
      return HMI_ERROR;
}
	

END_FUNCTION_BLOCK();
