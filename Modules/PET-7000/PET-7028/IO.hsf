BEGIN_FUNCTION_BLOCK();

WORD  v_ao[8];
int   gWriteCount = 0;

// Write AO
if (VAR_VALUE($ENABLE_AO) && VAR_VALUE($W_ACTION)) 
{
   int iWrite = 0;
    
   if( VAR_FLAG_IS_WRITE($AO0) ) iWrite++; 
   v_ao[0] = VAR_VALUE($AO0);  
     
   if( VAR_FLAG_IS_WRITE($AO1) ) iWrite++; 
   v_ao[1] = VAR_VALUE($AO1);

   if( VAR_FLAG_IS_WRITE($AO2) ) iWrite++; 
   v_ao[2] = VAR_VALUE($AO2);

   if( VAR_FLAG_IS_WRITE($AO3) ) iWrite++; 
   v_ao[3] = VAR_VALUE($AO3);

   if( VAR_FLAG_IS_WRITE($AO4) ) iWrite++; 
   v_ao[4] = VAR_VALUE($AO4);

   if( VAR_FLAG_IS_WRITE($AO5) ) iWrite++; 
   v_ao[5] = VAR_VALUE($AO5);

   if( VAR_FLAG_IS_WRITE($AO6) ) iWrite++; 
   v_ao[6] = VAR_VALUE($AO6);

   if( VAR_FLAG_IS_WRITE($AO7) ) iWrite++; 
   v_ao[7] = VAR_VALUE($AO7);

   if ( iWrite ) // Write only when need
   {   
      gWriteCount++;
      if ( ! MTM_WRITEAO($DEVICE, $NETID, 0, 8, v_ao, $TIMEOUT) )
         return HMI_ERROR;
   }
}

if ( gWriteCount ) return HMI_OK;  // Skip reading to reduce the device loading 

// Readback AO ***************	
if (VAR_VALUE($ENABLE_AO) && VAR_VALUE($R_ACTION)) { 
   if (MTM_READAO($DEVICE, $NETID, 0, 8, v_ao, $TIMEOUT) ) 
   {
      VAR_SET($AO0, v_ao[0]);
      VAR_SET($AO1, v_ao[1]);
      VAR_SET($AO0, v_ao[2]);
      VAR_SET($AO1, v_ao[3]);
      VAR_SET($AO0, v_ao[4]);
      VAR_SET($AO1, v_ao[5]);
      VAR_SET($AO0, v_ao[6]);
      VAR_SET($AO1, v_ao[7]);
   } else
      return HMI_ERROR;
}

END_FUNCTION_BLOCK();
