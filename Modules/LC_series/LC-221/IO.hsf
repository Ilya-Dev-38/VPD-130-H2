BEGIN_FUNCTION_BLOCK();

char  v_do,v_di = 0;
WORD  v_ao[1];
int   gWriteCount = 0;

// Write DO
if (VAR_VALUE($ENABLE_DO) && VAR_VALUE($W_ACTION)) 
{
   int iWrite = 0;
   v_do   = 0;

   iWrite += VAR_GET_WRITE_BYTE(&v_do, $DO0, 0);
    
   if ( iWrite )  // Write only when need
   {
      gWriteCount++;
      if ( ! mrm_WriteDO($CONNECTION, $NETID, 0, 1, &v_do) )
          return HMI_ERROR;
   }  
}

// Write AO
if (VAR_VALUE($ENABLE_AO) && VAR_VALUE($W_ACTION)) 
{
   int iWrite = 0;
    
   if( VAR_FLAG_IS_WRITE($AO0) ) iWrite++; 
   v_ao[0] = VAR_VALUE($AO0);  

   if ( iWrite ) // Write only when need
   {   
      gWriteCount++;
      if ( ! mrm_WriteAO($CONNECTION, $NETID, 32, 1, v_ao) )
         return HMI_ERROR;
   }
}

if ( gWriteCount ) return HMI_OK;  // Skip reading to reduce the device loading 

// Readback DO ***************
if (VAR_VALUE($ENABLE_DO) && VAR_VALUE($R_ACTION)) { 
   if (mrm_ReadDO($CONNECTION, $NETID, 0, 1, &v_do) ) 
   {
      VAR_SET($DO0, (v_do>>0) & 1);
   } else
      return HMI_ERROR;
}

if (VAR_VALUE($ENABLE_DI) && VAR_VALUE($R_ACTION)) { 
   if (mrm_ReadDI($CONNECTION, $NETID, 32, 1, &v_di) ) 
   {
      VAR_SET($DI0, (v_di>>0) & 1);
   } else
      return HMI_ERROR;
}

// Readback AO ***************	
if (VAR_VALUE($ENABLE_AO) && VAR_VALUE($R_ACTION)) { 
   if (mrm_ReadAO($CONNECTION, $NETID, 32, 1, v_ao) ) 
   {
      VAR_SET($AO0, v_ao[0]);
   } else
      return HMI_ERROR;
}

END_FUNCTION_BLOCK();
