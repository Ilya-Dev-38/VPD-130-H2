BEGIN_FUNCTION_BLOCK();
char  v_di[2];
BOOL  flag ;

uart_SetTimeout($CONNECTION, $TIMEOUT);

if(VAR_VALUE($ENABLE_DI) && VAR_VALUE($R_ACTION))
{
   v_di[0] = v_di[1] = 0;

   // Modbus RTU master API uses byte-array to send/receive data.
   flag = mrm_ReadDI($CONNECTION, $NETID, 0, 14, v_di);
   if (! flag) return HMI_ERROR; // failure

   VAR_SET($DI0, (v_di[0]>>0) & 1);
   VAR_SET($DI1, (v_di[0]>>1) & 1);
   VAR_SET($DI2, (v_di[0]>>2) & 1);
   VAR_SET($DI3, (v_di[0]>>3) & 1);
   VAR_SET($DI4, (v_di[0]>>4) & 1);
   VAR_SET($DI5, (v_di[0]>>5) & 1);
   VAR_SET($DI6, (v_di[0]>>6) & 1);
   VAR_SET($DI7, (v_di[0]>>7) & 1);
   
   VAR_SET($DI8,  (v_di[1]>>0) & 1);
   VAR_SET($DI9,  (v_di[1]>>1) & 1);
   VAR_SET($DI10, (v_di[1]>>2) & 1);
   VAR_SET($DI11, (v_di[1]>>3) & 1);
   VAR_SET($DI12, (v_di[1]>>4) & 1);
   VAR_SET($DI13, (v_di[1]>>5) & 1);
}


END_FUNCTION_BLOCK();
